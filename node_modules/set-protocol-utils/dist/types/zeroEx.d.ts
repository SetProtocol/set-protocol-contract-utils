/// <reference types="node" />
import Web3 from 'web3';
import { Order } from '@0xproject/types';
import { BigNumber } from './bignumber';
import { Address, Bytes, ZeroExSignedFillOrder } from './types';
export declare function generateZeroExOrdersBuffer(orders: ZeroExSignedFillOrder[]): Buffer;
export declare function zeroExOrderToBuffer(order: Order): Buffer[];
export declare function generateZeroExExchangeWrapperOrder(zeroExOrder: Order, signature: Bytes, fillAmount: BigNumber): Bytes;
export declare function zeroExSignedFillOrderToBuffer(zeroExOrder: Order, signature: Bytes, fillAmount: BigNumber): Buffer[];
export declare function generateZeroExOrder(senderAddress: Address, makerAddress: Address, takerAddress: Address, makerFee: BigNumber, takerFee: BigNumber, makerAssetAmount: BigNumber, takerAssetAmount: BigNumber, makerTokenAddress: Address, takerTokenAddress: Address, salt: BigNumber, exchangeAddress: Address, feeRecipientAddress: Address, expirationTimeSeconds: BigNumber): Order;
export declare function extractAddressFromAssetData(assetData: string): string;
export declare function encodeAddressAsAssetData(tokenAddress: Address): string;
export declare function generateZeroExSignedFillOrder(senderAddress: Address, makerAddress: Address, takerAddress: Address, makerFee: BigNumber, takerFee: BigNumber, makerAssetAmount: BigNumber, takerAssetAmount: BigNumber, makerTokenAddress: Address, takerTokenAddress: Address, salt: BigNumber, exchangeAddress: Address, feeRecipientAddress: Address, expirationTimeSeconds: BigNumber, fillAmount: BigNumber, web3: Web3): Promise<ZeroExSignedFillOrder>;
export declare function signZeroExOrderAsync(order: Order, web3: Web3): Promise<string>;
