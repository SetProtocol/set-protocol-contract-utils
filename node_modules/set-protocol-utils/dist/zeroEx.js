/*
  Copyright 2018 Set Labs Inc.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
*/
'use strict';
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var _ = __importStar(require("lodash"));
var ethUtil = __importStar(require("ethereumjs-util"));
var tiny_promisify_1 = __importDefault(require("tiny-promisify"));
var order_utils_1 = require("@0xproject/order-utils");
var types_1 = require("@0xproject/types");
var constants_1 = require("./constants");
var orders_1 = require("./orders");
var encoding_1 = require("./encoding");
function generateZeroExOrdersBuffer(orders) {
    var zeroExOrdersAsBuffers = [];
    _.map(orders, function (order) {
        var zeroExOrderHex = generateZeroExExchangeWrapperOrder(order, order.signature, order.fillAmount);
        zeroExOrdersAsBuffers.push(ethUtil.toBuffer(zeroExOrderHex));
    });
    var zeroExOrderBodyBuffer = Buffer.concat(zeroExOrdersAsBuffers);
    var zeroExOrderHeader = orders_1.generateExchangeOrderHeader(constants_1.constants.EXCHANGES.ZERO_EX, orders.length, zeroExOrderBodyBuffer.length);
    return Buffer.concat([
        Buffer.concat(zeroExOrderHeader),
        zeroExOrderBodyBuffer,
    ]);
}
exports.generateZeroExOrdersBuffer = generateZeroExOrdersBuffer;
function zeroExOrderToBuffer(order) {
    var makerAssetData = order.makerAssetData, takerAssetData = order.takerAssetData;
    var makerTokenAddress = extractAddressFromAssetData(makerAssetData);
    var takerTokenAddress = extractAddressFromAssetData(takerAssetData);
    return [
        encoding_1.paddedBufferForPrimitive(order.makerAddress),
        encoding_1.paddedBufferForPrimitive(order.takerAddress),
        encoding_1.paddedBufferForPrimitive(order.feeRecipientAddress),
        encoding_1.paddedBufferForPrimitive(order.senderAddress),
        encoding_1.paddedBufferForBigNumber(order.makerAssetAmount),
        encoding_1.paddedBufferForBigNumber(order.takerAssetAmount),
        encoding_1.paddedBufferForBigNumber(order.makerFee),
        encoding_1.paddedBufferForBigNumber(order.takerFee),
        encoding_1.paddedBufferForBigNumber(order.expirationTimeSeconds),
        encoding_1.paddedBufferForBigNumber(order.salt),
        encoding_1.paddedBufferForPrimitive(makerTokenAddress),
        encoding_1.paddedBufferForPrimitive(takerTokenAddress),
    ];
}
exports.zeroExOrderToBuffer = zeroExOrderToBuffer;
function generateZeroExExchangeWrapperOrder(zeroExOrder, signature, fillAmount) {
    var zeroExOrderBuffer = zeroExSignedFillOrderToBuffer(zeroExOrder, signature, fillAmount);
    return encoding_1.bufferArrayToHex(zeroExOrderBuffer);
}
exports.generateZeroExExchangeWrapperOrder = generateZeroExExchangeWrapperOrder;
function zeroExSignedFillOrderToBuffer(zeroExOrder, signature, fillAmount) {
    var signatureLength = encoding_1.numBytesFromHex(signature);
    var orderHeader = [
        encoding_1.paddedBufferForBigNumber(signatureLength),
        encoding_1.paddedBufferForBigNumber(fillAmount),
    ];
    var zeroExOrderBuffer = zeroExOrderToBuffer(zeroExOrder);
    return orderHeader.concat([ethUtil.toBuffer(signature)]).concat(zeroExOrderBuffer);
}
exports.zeroExSignedFillOrderToBuffer = zeroExSignedFillOrderToBuffer;
function generateZeroExOrder(senderAddress, makerAddress, takerAddress, makerFee, takerFee, makerAssetAmount, takerAssetAmount, makerTokenAddress, takerTokenAddress, salt, exchangeAddress, feeRecipientAddress, expirationTimeSeconds) {
    return {
        senderAddress: senderAddress,
        makerAddress: makerAddress,
        takerAddress: takerAddress,
        makerFee: makerFee,
        takerFee: takerFee,
        makerAssetAmount: makerAssetAmount,
        takerAssetAmount: takerAssetAmount,
        makerAssetData: order_utils_1.assetDataUtils.encodeERC20AssetData(makerTokenAddress),
        takerAssetData: order_utils_1.assetDataUtils.encodeERC20AssetData(takerTokenAddress),
        salt: salt,
        exchangeAddress: exchangeAddress,
        feeRecipientAddress: feeRecipientAddress,
        expirationTimeSeconds: expirationTimeSeconds,
    };
}
exports.generateZeroExOrder = generateZeroExOrder;
function extractAddressFromAssetData(assetData) {
    return order_utils_1.assetDataUtils.decodeERC20AssetData(assetData).tokenAddress;
}
exports.extractAddressFromAssetData = extractAddressFromAssetData;
function encodeAddressAsAssetData(tokenAddress) {
    return order_utils_1.assetDataUtils.encodeERC20AssetData(tokenAddress);
}
exports.encodeAddressAsAssetData = encodeAddressAsAssetData;
function generateZeroExSignedFillOrder(senderAddress, makerAddress, takerAddress, makerFee, takerFee, makerAssetAmount, takerAssetAmount, makerTokenAddress, takerTokenAddress, salt, exchangeAddress, feeRecipientAddress, expirationTimeSeconds, fillAmount, web3) {
    return __awaiter(this, void 0, void 0, function () {
        var zeroExOrder, signature, fillOrder;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    zeroExOrder = {
                        senderAddress: senderAddress,
                        makerAddress: makerAddress,
                        takerAddress: takerAddress,
                        makerFee: makerFee,
                        takerFee: takerFee,
                        makerAssetAmount: makerAssetAmount,
                        takerAssetAmount: takerAssetAmount,
                        makerAssetData: order_utils_1.assetDataUtils.encodeERC20AssetData(makerTokenAddress),
                        takerAssetData: order_utils_1.assetDataUtils.encodeERC20AssetData(takerTokenAddress),
                        salt: salt,
                        exchangeAddress: exchangeAddress,
                        feeRecipientAddress: feeRecipientAddress,
                        expirationTimeSeconds: expirationTimeSeconds,
                    };
                    return [4 /*yield*/, signZeroExOrderAsync(zeroExOrder, web3)];
                case 1:
                    signature = _a.sent();
                    fillOrder = zeroExOrder;
                    fillOrder.signature = signature;
                    fillOrder.fillAmount = fillAmount;
                    return [2 /*return*/, fillOrder];
            }
        });
    });
}
exports.generateZeroExSignedFillOrder = generateZeroExSignedFillOrder;
function signZeroExOrderAsync(order, web3) {
    return __awaiter(this, void 0, void 0, function () {
        var orderHashBuffer, orderHashHex, maker;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    orderHashBuffer = order_utils_1.orderHashUtils.getOrderHashBuffer(order);
                    orderHashHex = "0x" + orderHashBuffer.toString('hex');
                    maker = order.makerAddress;
                    return [4 /*yield*/, signMessageAsync(orderHashHex, maker, types_1.SignatureType.EthSign, web3)];
                case 1: return [2 /*return*/, _a.sent()];
            }
        });
    });
}
exports.signZeroExOrderAsync = signZeroExOrderAsync;
function signMessageAsync(hexMsg, address, sigType, web3) {
    return __awaiter(this, void 0, void 0, function () {
        var sig, rpcSig, signature;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, tiny_promisify_1.default(web3.eth.sign)(hexMsg, web3.utils.toChecksumAddress(address))];
                case 1:
                    sig = _a.sent();
                    rpcSig = ethUtil.fromRpcSig(sig);
                    signature = Buffer.concat([
                        ethUtil.toBuffer(rpcSig.v),
                        rpcSig.r,
                        rpcSig.s,
                        ethUtil.toBuffer(sigType),
                    ]);
                    return [2 /*return*/, "0x" + signature.toString('hex')];
            }
        });
    });
}
//# sourceMappingURL=zeroEx.js.map