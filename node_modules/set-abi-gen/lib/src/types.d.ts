import { EventAbi, MethodAbi, DataItem } from 'ethereum-types';
export declare enum ParamKind {
    Input = "input",
    Output = "output"
}
export declare enum ContractsBackend {
    Web3 = "web3",
    Ethers = "ethers"
}
export interface EnhancedMethodAbi extends MethodAbi {
    singleReturnValue: boolean;
    hasReturnValue: boolean;
    numberReturnValue: boolean;
    arrayReturnValue: boolean;
    tsName: string;
    functionSignature: string;
    inputs: EnhancedDataItem[];
    outputs: EnhancedDataItem[];
}
export interface EnhancedDataItem {
    name: string;
    type: string;
    isNumber: boolean;
    isArray: boolean;
    components?: DataItem[];
}
export interface ContextData {
    contractName: string;
    methods: EnhancedMethodAbi[];
    events: EventAbi[];
}
//# sourceMappingURL=types.d.ts.map